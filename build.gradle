plugins {
  id 'java-library'
  id 'jvm-test-suite'
  id 'maven-publish'
  id 'signing'
  id 'io.toolebox.git-versioner' version '1.6.5' apply false
  id 'com.liferay.maven.plugin.builder' version '2.0.2' apply false
  id 'com.diffplug.spotless' version '6.22.0' apply false
}

dependencies {
  compileOnly 'javax.jms:javax.jms-api:2.0'
  implementation 'org.slf4j:slf4j-api:1.7.36'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.3'
  implementation 'commons-beanutils:commons-beanutils:1.9.4'
}

allprojects {
  apply plugin: 'java-library'
  apply plugin: 'jvm-test-suite'
  apply plugin: 'maven-publish'
  apply plugin: 'signing'
  apply plugin: 'com.diffplug.spotless'
  apply plugin: 'io.toolebox.git-versioner'

  group 'com.testingsyndicate'

  repositories {
    mavenCentral()
  }

  java {
    withJavadocJar()
    withSourcesJar()
  }

  testing {
    suites {
      test {
        useJUnitJupiter()
        dependencies {
          implementation 'org.slf4j:slf4j-log4j12:1.7.36'
          implementation 'org.apache.activemq:artemis-server:2.31.2'
          implementation 'org.apache.activemq:artemis-jms-server:2.31.2'
          implementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
          implementation 'org.assertj:assertj-core:3.24.2'
          implementation 'org.mockito:mockito-core:5.7.0'
          runtimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
        }
      }
    }
  }

  spotless {
    java {
      googleJavaFormat()
      endWithNewline()
    }
    groovyGradle {
      greclipse('4.27')
      indentWithSpaces(2)
      endWithNewline()
    }
  }

  versioner {
    startFrom {
      major = 2
      minor = 1
    }
  }

  publishing {
    repositories {
      maven {
        url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        credentials {
          username = findProperty('publishUsername')
          password = findProperty('publishPassword')
        }
      }
    }
    publications {
      mavenJava(MavenPublication) {
        from components.java
        pom {
          name = 'JMS Responder'
          description = 'A stub for JMS Request/Reply'
          url = 'https://github.com/goughy000/jms-responder'
          licenses {
            license {
              name = 'MIT License'
              url = 'https://opensource.org/licenses/MIT'
            }
          }
          developers {
            developer {
              name = 'Jack Gough'
              organization = 'Testing Syndicate'
              organizationUrl = 'https://testingsyndicate.com/'
            }
          }
          scm {
            connection = 'scm:git:git://github.com/goughy000/jms-responder.git'
            developerConnection = 'scm:git:git://github.com/goughy000/jms-responder.git'
            url = 'https://github.com/goughy000/jms-responder.git'
          }
        }
      }
    }
  }

  signing {
    useInMemoryPgpKeys(decode(findProperty('signingKey')), '')
    sign publishing.publications.mavenJava
  }
}

project(':jms-responder-maven-plugin') {
  apply plugin: 'com.liferay.maven.plugin.builder'

  dependencies {
    implementation project(':')
    api 'org.apache.maven:maven-plugin-api:3.9.5'
    api 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.10.2'
  }

  buildPluginDescriptor {
    goalPrefix = 'jms-responder'
    pomGroupId = project.group
    pomArtifactId = project.name
    classesDir = sourceSets.main.java.classesDirectory
    mavenPluginPluginVersion = '3.9.0'
  }

  afterEvaluate {
    buildPluginDescriptor {
      pomVersion = project.version
    }
  }

  publishing.publications.mavenJava.pom.packaging = 'maven-plugin'

  processResources.dependsOn('buildPluginDescriptor')
  sourcesJar.dependsOn('buildPluginDescriptor')
}

def decode(encoded) {
  new String(Base64.getDecoder().decode(encoded ?: ''))
}
